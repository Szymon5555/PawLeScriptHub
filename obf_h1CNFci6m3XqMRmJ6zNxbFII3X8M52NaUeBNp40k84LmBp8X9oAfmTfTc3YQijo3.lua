do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==1) then function v21(v31,v32,v33)if v33 then local v75=(v31/((204 -(81 + 121))^(v32-(2 -1))))%((931 -((2325 -(212 + 1578)) + 394))^(((v33-1) -(v32-(1 -0))) + (1803 -((2284 -(43 + 1222)) + 783)))) ;return v75-(v75%(1 -0)) ;else local v76=(1 + 1)^(v32-1) ;return (((v31%(v76 + v76))>=v76) and (2 -1)) or (0 -0) ;end end v22=nil;function v22()local v34=380 -(298 + (294 -212)) ;local v35;while true do if ((1 -0)==v34) then return v35;end if (v34==(0 -(0 -0))) then v35=v1(v16,v19,v19);v19=v19 + (1 -(0 + 0)) ;v34=1;end end end v23=nil;v18=2;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v36)if (v1(v36,2)==79) then v20=v0(v3(v36,1,1));return "";else local v77=0;local v78;while true do if (v77==0) then v78=v2(v0(v36,16));if v20 then local v99=0;local v100;while true do if (1==v99) then return v100;end if (v99==0) then v100=v5(v78,v20);v20=nil;v99=1;end end else return v78;end break;end end end end);v21=nil;v18=1;end if (v18==5) then v30=nil;function v30(v37,v38,v39)local v40=v37[1];local v41=v37[2];local v42=v37[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (v67==2) then v72=nil;function v72()local v79=v40;local v80=v41;local v81=v42;local v82=v28;local v83={};local v84={};local v85={};for v89=(2535 -1364) -(741 + 430) ,v71 do if ((v89>=v81) or (((5399 -3777) + 551 + 86)>=(6234 -1546))) then v83[v89-v81 ]=v70[v89 + (1626 -(1003 + 622)) ];else v85[v89]=v70[v89 + 1 + 0 ];end end local v86=(v71-v81) + ((174 + 382) -(236 + (928 -609))) ;local v87;local v88;while true do local v90=1650 -(1321 + (481 -(28 + 124))) ;local v91;local v92;while true do if ((v90==0) or (4299<=(6822 -3774))) then v91=0 + 0 ;v92=nil;v90=1 -(0 -0) ;end if ((3036>=((27643 -19736) -5228)) and (v90==(3 -2))) then while true do if (((3907 -(463 + 645))>845) and (v91==0)) then v92=349 -(84 + 68 + 197) ;while true do if ((v92==((3 -2) + (1924 -(971 + 953)))) or (2952<=(225 + (118 -78)))) then if ((v88<=((1 -0) + 7)) or (2665<=(48 + 91))) then if ((v88<=(1 + 2)) or ((4209 -949)<=(317 -179))) then if ((((1838 -1161) + (2670 -(1863 + 38)))>(1389 -(184 + 61 + 142))) and (v88<=(1 + 0))) then if ((1896>((3413 -(1405 + 352)) -(270 + 143))) and (v88>(0 -(1058 -(83 + 975))))) then local v130=(591 -(322 + 269)) -0 ;local v131;local v132;while true do if (((4924 -(338 + 80))>=(12847 -9194)) and (v130==(621 -(441 + 179)))) then while true do if ((v131==(0 -0)) or ((7726 -3711)==4399)) then v132=v87[1108 -(779 + 327) ];v85[v132]=v85[v132]();break;end end break;end if ((4032>=977) and (v130==(638 -(36 + 602)))) then v131=0;v132=nil;v130=2 -1 ;end end else v85[v87[2]]();end elseif ((2929<=(16807 -12284)) and (v88==(1782 -(49 + 356 + 1375)))) then for v157=v87[1183 -(333 + 848) ],v87[3] do v85[v157]=nil;end else local v133=361 -(83 + 278) ;local v134;local v135;local v136;local v137;while true do if ((1744<(6182 -2512)) and ((1 + 0)==v133)) then v136=nil;v137=nil;v133=2 + 0 ;end if ((v133==(0 -0)) or ((308 + 535)==(3406 + 35 + 1066))) then v134=0 + 0 ;v135=nil;v133=1 + 0 + 0 ;end if (((799 + 1789)<=2782) and (v133==2)) then while true do if ((v134==1) or ((3289 -((4023 -2669) + 64))==(271 + 3762))) then v137=nil;while true do if ((v135==(685 -(312 + 373))) or (810>=(3192 -(847 + 215)))) then local v185=0;while true do if (((1915 -(1880 + 34))==v185) or ((1319 + 346)==((2766 -(20 + 18)) -(55 + 354)))) then v135=55 -(37 + 17) ;break;end if (((6918 -2186)>4682) and (v185==((976 -(766 + 210)) -0))) then local v201=311 -((561 -(265 + 145)) + 160) ;while true do if ((v201==(0 -0)) or ((3 + 505)==(1112 -284))) then v136=v87[2];v137=v85[v87[3 -0 ]];v201=1 -0 ;end if ((1==v201) or ((5221 -(418 + 891))<(4083 -(352 + 1420)))) then v185=1;break;end end end end end if (((3618 -(304 + 398 + 419))==(4994 -2497)) and ((1687 -(439 + 1247))==v135)) then v85[v136 + 1 ]=v137;v85[v136]=v137[v87[4]];break;end end break;end if ((1849<2362) and (v134==(0 -0))) then local v180=(0 -0) + 0 ;while true do if (((1309 + 1972)==(1656 + 1625)) and (v180==(1 + 0))) then v134=1 + 0 ;break;end if ((2338>=(3017 -(443 + 1324))) and (v180==(0 + 0))) then v135=765 -(231 + 534) ;v136=nil;v180=1397 -(730 + 666) ;end end end end break;end end end elseif (((1419 -(46 + 339))<=(8889 -4809)) and (v88<=(3 + 2))) then if ((v88>(4 + 0)) or ((22827 -17994)==(2635 -(368 + 223)))) then if (((5368 -(503 + 1017))>=(746 -(86 + 113))) and (v87[3 -1 ]==v85[v87[4]])) then v68=v68 + 1 ;else v68=v87[350 -(187 + 126 + 34) ];end else v85[v87[826 -(567 + 257) ]]=v30(v80[v87[1758 -(312 + 1443) ]],nil,v39);end elseif (((11308 -8276)>(4894 -2778)) and (v88<=6)) then local v139=0 + 0 ;local v140;while true do if ((v139==((147 -(125 + 22)) + 0)) or ((1250 -787)<=(101 + 290))) then v140=v87[155 -(60 + 93) ];v85[v140]=v85[v140](v13(v85,v140 + (1 -0) ,v87[8 -5 ]));break;end end elseif ((1600<=(7978 -6375)) and (v88>((1288 -(810 + 471)) + 0))) then v85[v87[5 -3 ]]=v87[7 -4 ];else v85[v87[500 -(295 + 203) ]][v87[4 -1 ]]=v87[5 -1 ];end elseif (((3056 + 36 + 515)==(1061 + 2546)) and (v88<=(740 -(414 + 313)))) then if ((v88<=(1857 -(1296 + 341 + 210))) or ((10825 -7901)<(913 -(43 + 94)))) then if ((v88>(4 + (1832 -(1682 + 145)))) or ((4974 -(82 + 773))>=(526 + 3987))) then v85[v87[528 -(54 + (1834 -(1163 + 199))) ]][v87[5 -2 ]]=v85[v87[1 + 3 ]];else v85[v87[1941 -(709 + 1230) ]]=v85[v87[1919 -(1162 + 754) ]];end elseif ((v88<=((187 -(183 + 3)) + 10)) or ((1689 + 213)>(10883 -6739))) then local v145=0;local v146;local v147;local v148;local v149;local v150;local v151;while true do if (((432 + 4372)>=263) and (v145==(1953 -(270 + 1680)))) then while true do if ((v146==(0 + 0)) or (3814==(11867 -8189))) then local v181=0 + 0 ;while true do if ((v181==0) or ((2478 -(1683 + 27 + 10))>=2736)) then v147=1953 -(726 + 1227) ;v148=nil;v181=1 + 0 + 0 ;end if (((3986 -(408 + 411))<=(4820 -(442 + 84))) and (v181==1)) then v146=1 + (1549 -(783 + 766)) ;break;end end end if ((v146==2) or ((1343 -((2046 -(1538 + 10)) + 447))>=(5087 -(71 + 1106)))) then v151=nil;while true do if (((4342 -(211 + 268))==(4095 -(90 + 142))) and (v147==(5 -3))) then for v193=v148,v69 do local v194=1619 -(1318 + 301) ;local v195;while true do if ((v194==(0 + 0)) or (4686<=(2552 -(274 + 63)))) then v195=0 -0 ;while true do if (((5486 -(883 + 376))>(2555 -1096)) and (v195==(0 + 0))) then v151=v151 + 1 ;v85[v193]=v149[v151];break;end end break;end end end break;end if ((v147==0) or ((2073 + 293)<(1316 -678))) then local v189=1945 -((711 -(144 + 439)) + 1817) ;local v190;while true do if ((v189==((3215 -1297) -(1110 + 808))) or ((2107 + 2709)<=(5118 -(8374 -4410)))) then v190=146 -(136 + 10) ;while true do if ((1267==(107 + 1160)) and (v190==(1 + 0 + 0))) then v147=1 + 0 ;break;end if ((v190==(1888 -(242 + 1646))) or ((4187 + 599)<(2211 + 2291))) then v148=v87[2];v149,v150=v82(v85[v148](v13(v85,v148 + 1 ,v87[4 -1 ])));v190=(45 -(21 + 23)) + 0 ;end end break;end end end if ((1==v147) or (4743<=(136 + 1009))) then local v191=0;local v192;while true do if ((v191==(675 -(21 + 654))) or ((17193 -12562)==(1728 -(582 + (3452 -2624))))) then v192=0 -0 ;while true do if ((v192==((1834 -(199 + 1634)) + 0)) or ((2852 -1012)>(17161 -12577))) then v147=1802 -(407 + 1393) ;break;end if ((3625>=(4130 -(245 + 1636))) and (v192==0)) then local v207=0 + 0 ;while true do if (((7837 -3724)>=(656 + (171 -(90 + 16)))) and (v207==(568 -(28 + 539)))) then v192=2 -1 ;break;end if ((v207==(0 -0)) or ((3966 -(552 + 476))<=(43 + 223 + 373))) then v69=(v150 + v148) -(1 + 0) ;v151=0;v207=(5 -3) -1 ;end end end end break;end end end end break;end if (((11648 -7364)==(5007 -(348 + 375))) and (v146==(1 -0))) then local v182=0 + 0 + 0 ;while true do if ((v182==(1447 -(982 + 464))) or (((5706 -2088) -1302)>=(10336 -6735))) then v146=2;break;end if ((v182==(0 -(0 + 0))) or ((1506 + 208)>(7214 -2459))) then v149=nil;v150=nil;v182=1106 -(647 + 458) ;end end end end break;end if ((v145==(0 + 0)) or ((11985 -7251)<(11457 -7244))) then v146=0 -0 ;v147=nil;v145=296 -(276 + 19) ;end if (((1 + 1)==v145) or ((3011 -1931)==(8151 -(18110 -12945)))) then v150=nil;v151=nil;v145=1 + 2 ;end if (((451 + 420)==(1734 -(222 + 641))) and (v145==(1 + 0))) then v148=nil;v149=nil;v145=2 + 0 + 0 ;end end elseif ((v88>(6 + 6)) or (1467==(5297 -(211 + 448)))) then v68=v87[3];else v85[v87[2 + 0 ]]={};end elseif ((v88<=(9 + 6)) or ((3045 -(1018 + 567))>=(4972 -(148 + 903)))) then if (((4829 -(222 + 1176))==(10246 -(23066 -16251))) and (v88==(490 -(378 + 98)))) then local v152=186 -(108 + 78) ;local v153;local v154;while true do if ((v152==(1699 -(889 + 134 + 675))) or (((2212 -(16 + 864)) + 2890)<((457 -(287 + 33)) + 702))) then while true do if (((1357 + 756)==2113) and (v153==(0 + 0))) then v154=v87[877 -((2459 -1798) + 214) ];v85[v154]=v85[v154](v13(v85,v154 + 1 ,v69));break;end end break;end if (((9955 -5520)>=(5131 -(1084 + 274))) and (v152==(0 -0))) then v153=0 -(1951 -(1342 + 609)) ;v154=nil;v152=1 + 0 ;end end else do return;end end elseif (((3953 -2327)<(4733 -2673)) and (v88<=16)) then v85[v87[5 -3 ]]=v39[v87[(297 -(269 + 27)) + (7 -5) ]];elseif ((1201<(3250 -(243 + 1114))) and (v88==17)) then v85[v87[(93 + 193) -(143 + 141) ]]=v87[1969 -(453 + 1513) ]~=(1693 -(820 + 873)) ;elseif (((10142 -5698)>=(2839 -(204 + 1199))) and (v85[v87[2 + (375 -(221 + 154)) ]]==v87[4])) then v68=v68 + 1 + 0 ;else v68=v87[3 + 0 ];end v68=v68 + (2 -1) ;break;end if ((v92==(600 -(124 + 476))) or (3084<=(4758 -3090))) then local v108=0;local v109;while true do if (((4163 -2488)>=(729 + 166 + 357)) and (v108==(0 + 0))) then v109=(0 -0) -0 ;while true do if ((v109==(1 + 0)) or ((14411 -10945)==(252 + 243))) then v92=1648 -(1434 + 213) ;break;end if ((815<=(6538 -4092)) and (v109==(1600 -(954 + 646)))) then local v126=0 + 0 ;while true do if ((((1777 -678) + 2540)<((901 + 5970) -2156)) and ((1337 -(1302 + 35))==v126)) then v87=v79[v68];v88=v87[1 + 0 + 0 ];v126=794 -(436 + 357) ;end if ((((1835 -(351 + 1365)) + 1116)==(13 + 1222)) and (v126==(2 -1))) then v109=1 + 0 ;break;end end end end break;end end end end break;end end break;end end end end v67=3;end if (v67==0) then v68=1;v69= -1;v67=1;end if (v67==1) then v70={...};v71=v12("#",...) -1 ;v67=2;end if (v67==3) then A,B=v28(v11(v72));if  not A[1] then local v93=v37[4][v68] or "?" ;error("Script error at ["   .. v93   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end end end;end return v30(v29(),{},v17)(...);end if (v18==3) then function v25()local v43=v24();local v44=v24();local v45=1;local v46=(v21(v44,1 -(1479 -(1132 + 347)) ,45 -25 ) * ((1 + 1)^(23 + 9))) + v43 ;local v47=v21(v44,21,31);local v48=((v21(v44,12 + 20 )==1) and  -(2 -(1 + 0))) or (1 + 0) ;if (v47==(1751 -(48 + 1703))) then if (v46==0) then return v48 * (0 -0) ;else v47=1 + (0 -0) ;v45=0 + 0 ;end elseif (v47==(323 + 1724)) then return ((v46==(0 -(1945 -(465 + 1480)))) and (v48 * ((3 -2)/((638 + 467) -(65 + 1040))))) or (v48 * NaN) ;end return v8(v48,v47-(193 + 830) ) * (v45 + (v46/(2^(44 + 3 + 5)))) ;end v26=nil;function v26(v49)local v50;if  not v49 then v49=v24();if (v49==0) then return "";end end v50=v3(v16,v19,(v19 + v49) -(1 + 0) );v19=v19 + v49 ;local v51={};for v73=1 + 0 , #v50 do v51[v73]=v2(v1(v3(v50,v73,v73)));end return v6(v51);end v27=v24;v18=4;end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v52==(1 + 2)) then v59=nil;while true do if ((1061 -(163 + 897))~=v53) then else local v94=0 + 0 ;local v95;while true do if (v94~=(1278 -(968 + 310))) then else v95=0 + 0 ;while true do if (v95==1) then local v106=0 + 0 ;while true do if (v106==(893 -(167 + 725))) then v95=417 -(351 + 64) ;break;end if (v106~=(0 + 0)) then else for v113=1 + 0 ,v58 do local v114=1997 -(58 + 1939) ;local v115;local v116;local v117;while true do if (v114==1) then v117=nil;while true do if (v115~=0) then else local v127=0 + 0 ;local v128;while true do if (v127~=(0 + 0)) then else v128=0 + 0 ;while true do if ((0 -0)==v128) then local v177=0 -0 ;while true do if (v177~=(0 -0)) then else v116=v22();v117=nil;v177=1 + 0 ;end if (v177==(2 -1)) then v128=1 + 0 ;break;end end end if (v128==(928 -(480 + 447))) then v115=1;break;end end break;end end end if (v115==(1860 -(1069 + 790))) then if (v116==(3 -2)) then v117=v22()~=(1542 -(684 + 858)) ;elseif (v116==(1263 -(459 + 802))) then v117=v25();elseif (v116~=3) then else v117=v26();end v59[v113]=v117;break;end end break;end if (v114~=(0 -0)) then else v115=680 -(128 + 552) ;v116=nil;v114=2 -1 ;end end end v57[1066 -(689 + 374) ]=v22();v106=727 -(531 + 195) ;end end end if (v95~=(1 + 1)) then else v53=266 -(19 + 245) ;break;end if (v95~=(236 -(186 + 50))) then else local v107=0 + 0 ;while true do if (v107==(1 + 0)) then v95=1 + 0 ;break;end if (v107~=(0 -0)) then else v58=v24();v59={};v107=1053 -(690 + 362) ;end end end end break;end end end if (v53==(0 -0)) then local v96=0;while true do if (v96==(0 + 0)) then v54={};v55={};v96=1 -0 ;end if (v96~=1) then else v56={};v57={v54,v55,nil,v56};v96=6 -4 ;end if (v96~=2) then else v53=1 + 0 ;break;end end end if (v53~=2) then else local v97=0;local v98;while true do if (v97~=(0 + 0)) then else v98=0;while true do local v105=0 + 0 ;while true do if (v105~=(0 + 0)) then else if (v98~=0) then else local v111=0;while true do if ((0 + 0)~=v111) then else for v118=1,v24() do local v119=0;local v120;local v121;while true do if (v119==(3 -2)) then while true do if (v120==(568 -(135 + 433))) then v121=v22();if (v21(v121,4 -3 ,1)~=0) then else local v172=0 -0 ;local v173;local v174;local v175;local v176;while true do if (v172==(7 -5)) then while true do if (v173==1) then local v196=0 -0 ;local v197;while true do if (v196==(0 + 0)) then v197=0;while true do if (v197==0) then local v214=1436 -(68 + 1368) ;while true do if (v214~=(1348 -(790 + 558))) then else v176={v23(),v23(),nil,nil};if (v174==(242 -(188 + 54))) then local v215=0 -0 ;local v216;while true do if (v215~=(0 + 0)) then else v216=0 -0 ;while true do if (v216~=0) then else v176[1865 -(845 + 1017) ]=v23();v176[4]=v23();break;end end break;end end elseif (v174==(1 + 0)) then v176[3 + 0 ]=v24();elseif (v174==(4 -2)) then v176[12 -9 ]=v24() -((1574 -(1167 + 405))^(30 -14)) ;elseif (v174~=(10 -7)) then else local v221=0 -0 ;while true do if (v221==(0 -0)) then v176[2 + 1 ]=v24() -((1 + 1)^16) ;v176[7 -3 ]=v23();break;end end end v214=1;end if (v214==(1 -0)) then v197=1 -0 ;break;end end end if (1==v197) then v173=2 + 0 ;break;end end break;end end end if (v173~=(0 + 0)) then else local v198=1907 -(863 + 1044) ;while true do if ((403 -(23 + 380))~=v198) then else v174=v21(v121,1131 -(421 + 708) ,2 + 1 );v175=v21(v121,471 -(115 + 352) ,6);v198=132 -(99 + 32) ;end if (v198~=1) then else v173=1;break;end end end if (v173~=(636 -(24 + 610))) then else local v199=0;while true do if (v199~=(0 + 0)) then else if (v21(v175,2 -1 ,1849 -(1428 + 420) )~=1) then else v176[2 + 0 ]=v59[v176[2 + 0 ]];end if (v21(v175,2,5 -3 )==1) then v176[409 -(94 + 312) ]=v59[v176[1730 -(1307 + 420) ]];end v199=1 + 0 ;end if (v199==(1 -0)) then v173=3 + 0 ;break;end end end if (v173~=(2 + 1)) then else if (v21(v175,8 -5 ,6 -3 )==(3 -2)) then v176[4]=v59[v176[9 -5 ]];end v54[v118]=v176;break;end end break;end if (v172~=(2 -1)) then else v175=nil;v176=nil;v172=2 + 0 ;end if (v172~=(0 -0)) then else v173=1854 -(1517 + 337) ;v174=nil;v172=1;end end end break;end end break;end if (v119~=(0 -0)) then else v120=0 + 0 ;v121=nil;v119=1;end end end for v122=2 -1 ,v24() do v55[v122-(1 -0) ]=v29();end v111=1;end if (v111~=(1 + 0)) then else v98=2 -1 ;break;end end end if (v98~=(3 -2)) then else local v112=0 + 0 ;while true do if (v112~=(0 + 0)) then else for v124=1 + 0 ,v24() do v56[v124]=v24();end return v57;end end end break;end end end break;end end end end break;end if (v52==(1 + 0)) then v55=nil;v56=nil;v52=3 -1 ;end if (v52==(1366 -(1283 + 81))) then v57=nil;v58=nil;v52=1 + 2 ;end if (v52==0) then v53=0 -0 ;v54=nil;v52=1 + 0 ;end end end v18=5;end if (2==v18) then function v23()local v60=0 -0 ;local v61;local v62;while true do if (v60==(244 -(121 + 122))) then return (v62 * ((3148 -2213) -679)) + v61 ;end if (v60==(636 -(487 + (1720 -(964 + 607))))) then v61,v62=v1(v16,v19,v19 + (4 -2) );v19=v19 + (1333 -(746 + 310 + 275)) ;v60=1 -0 ;end end end v24=nil;function v24()local v63,v64,v65,v66=v1(v16,v19,v19 + 3 );v19=v19 + 2 + 2 ;return (v66 * (16778881 -(646 + 1019))) + (v65 * ((67043 -(166 + 321)) -(291 + 729))) + (v64 * (616 -(77 + 283))) + v63 ;end v25=nil;v18=3;end end end vv9(),...);end